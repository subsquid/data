# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 6c4da2aa833bee947f964424bb092553d36883b5ab051fe00ea98c12172866ad # shrinks to tables = [RecordBatch { schema: Schema { fields: [Field { name: "c0", data_type: UInt32, nullable: true, dict_id: 0, dict_is_ordered: false, metadata: {} }], metadata: {} }, columns: [PrimitiveArray<UInt32> [   null,   null,   null,   null,   null,   null,   null,   null,   null,   null,   ...85 elements...,   null,   null,   null,   null,   null,   null,   null,   null,   null,   null, ]], row_count: 105 }]
cc d74efe9a28bfa847647b17fe3e174e25e0903440216e104b05b407c93f98323d # shrinks to tables = [RecordBatch { schema: Schema { fields: [Field { name: "c0", data_type: UInt64, nullable: true, dict_id: 0, dict_is_ordered: false, metadata: {} }], metadata: {} }, columns: [PrimitiveArray<UInt64> [ ]], row_count: 0 }]
cc 2942f6d3a7b2fafa1e6751acf50539c89420a1bd8ee196f8dfccebdd61285b14 # shrinks to tables = [RecordBatch { schema: Schema { fields: [Field { name: "c0", data_type: Boolean, nullable: true, dict_id: 0, dict_is_ordered: false, metadata: {} }], metadata: {} }, columns: [BooleanArray [ ]], row_count: 0 }]
cc fa7ecd351eea17f93417dcef656e04fb517f3326ee5156a9905a2f93d5c122eb # shrinks to tables = [RecordBatch { schema: Schema { fields: [Field { name: "c0", data_type: Binary, nullable: true, dict_id: 0, dict_is_ordered: false, metadata: {} }], metadata: {} }, columns: [BinaryArray [ ]], row_count: 0 }]
cc 3ba44f738ab8d9004aca6db4b4442482011c2adab9d5d10f248b5141a8c8c003 # shrinks to tables = [RecordBatch { schema: Schema { fields: [Field { name: "c0", data_type: Timestamp(Second, None), nullable: true, dict_id: 0, dict_is_ordered: false, metadata: {} }], metadata: {} }, columns: [PrimitiveArray<Timestamp(Second, None)> [ ]], row_count: 0 }]
cc cab5fca61f1f4603781247193158a34703890942dc2ed96d98066e206056312c # shrinks to tables = [RecordBatch { schema: Schema { fields: [Field { name: "c0", data_type: UInt32, nullable: true, dict_id: 0, dict_is_ordered: false, metadata: {} }], metadata: {} }, columns: [PrimitiveArray<UInt32> [ ]], row_count: 0 }]
cc 84bcf5186e144581dcd88f8c1766d076ec4fedf827b9b223bcdd3971aaf0e4a3 # shrinks to tables = [RecordBatch { schema: Schema { fields: [Field { name: "c0", data_type: Utf8, nullable: true, dict_id: 0, dict_is_ordered: false, metadata: {} }], metadata: {} }, columns: [StringArray [ ]], row_count: 0 }]
cc f1774219a7d490b4347b012d25344eac13c29fa3c1db9be00831db3e032187a2 # shrinks to tables = [RecordBatch { schema: Schema { fields: [Field { name: "c0", data_type: Struct([Field { name: "s", data_type: Utf8, nullable: false, dict_id: 0, dict_is_ordered: false, metadata: {} }]), nullable: true, dict_id: 0, dict_is_ordered: false, metadata: {} }], metadata: {} }, columns: [StructArray -- validity:  [ ] [ -- child 0: "s" (Utf8) StringArray [ ] ]], row_count: 0 }]
cc feec87775e0ff9bed5d28b06da94f0e62c1a7fde9c0fb0922cdd167a60f531d5 # shrinks to tables = [RecordBatch { schema: Schema { fields: [Field { name: "c0", data_type: List(Field { name: "item", data_type: Int32, nullable: true, dict_id: 0, dict_is_ordered: false, metadata: {} }), nullable: true, dict_id: 0, dict_is_ordered: false, metadata: {} }], metadata: {} }, columns: [ListArray [ ]], row_count: 0 }]
